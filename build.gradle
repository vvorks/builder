buildscript {
	dependencies {
		classpath 'org.webjars.bowergithub.globalizejs:globalize:1.7.0'
    }
}

plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "de.esoco.gwt" version "1.1.0"
	id "ca.coglinc.javacc" version "2.4.0"
	id "de.undercouch.download" version "5.0.1"
}

apply plugin: 'eclipse'

group = 'com.github.vvorks.builder'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

compileJjtree {
    inputDirectory = file('src/main/java')
}

sourceSets {
 	main {
 		java {
			srcDir compileJjtree.outputDirectory
			srcDir compileJavacc.outputDirectory
		}
		resources {
			srcDir 'src/main/java'
		}
	}
}

gwt {
	/** Module to compile, can be multiple */
	module 'com.github.vvorks.builder.Builder'
	/** Add GWT plugin config (only if plugin 'eclipse' is enabled) */
	gwtPluginEclipse = false
	/** GWT compile options */
	compile {
		/** The level of logging detail (ERROR, WARN, INFO, TRACE, DEBUG, SPAM, ALL) */
		logLevel = "INFO"
		/** Script output style. (OBF, PRETTY, DETAILED)*/
		style = "OBF"
		/** Sets the optimization level used by the compiler. 0=none 9=maximum. */
		optimize = 5
		/** avoid classpath too long problem */
		envClasspath = true
	}
	dev {
		/** avoid classpath too long problem */
		envClasspath = true
	}
}

void copyResource(String inDir, String outDir, String name) {
	ClassLoader loader = this.getClass().getClassLoader()
	copy {
		from resources.text.fromUri(loader.getResource(inDir + "/" + name)).asFile("UTF-8")
		into file(outDir)
		rename { x -> name }
	}
}

task copyCldr() {
	def from = "META-INF/resources/webjars/cldrjs/dist"
	def to   = "${buildDir}/resources/main/static/cldrjs"
	copyResource(from, to, "cldr.js")
	copyResource(from, to, "cldr/event.js")
	copyResource(from, to, "cldr/supplemental.js")
	copyResource(from, to, "cldr/unresolved.js")
}

task copyGlobalize() {
	def from = "META-INF/resources/webjars/globalize/dist"
	def to   = "${buildDir}/resources/main/static/globalize"
	copyResource(from, to, "globalize.js")
	copyResource(from, to, "globalize/unit.js")
	copyResource(from, to, "globalize/currency.js")
	copyResource(from, to, "globalize/date.js")
	copyResource(from, to, "globalize/message.js")
	copyResource(from, to, "globalize/number.js")
	copyResource(from, to, "globalize/plural.js")
	copyResource(from, to, "globalize/relative-time.js")
}

task downloadCldrJson(type: Download) {
	src 'https://github.com/unicode-org/cldr-json/releases/download/40.0.0/cldr-40.0.0-json-full.zip'
	dest new File(buildDir, 'tmp/cldr/cldr-json.zip')
	onlyIfModified true
}

task downloadAndUnzipCldrJson(dependsOn: downloadCldrJson, type: Copy) {
	from zipTree(downloadCldrJson.dest)
    into file("${buildDir}/resources/main/static/cldr-json")
}

classes {
	dependsOn copyCldr
	dependsOn copyGlobalize
	dependsOn downloadAndUnzipCldrJson
}

task copyGWTCode(dependsOn: ["gwtCompile"], type: Copy) {
	from file("${buildDir}/gwt/out")
	into file("${buildDir}/resources/main/static")
}

bootJar {
	dependsOn copyGWTCode
	archiveName = "vvorksbuilder-${version}.jar"
}

bootRun {
	dependsOn copyGWTCode
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compileOnly 'org.fusesource.restygwt:restygwt:2.2.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.apache.poi:poi:5.1.0'
	implementation 'org.apache.poi:poi-ooxml:5.1.0'
	implementation 'com.github.jknack:handlebars:4.2.0'
	implementation 'org.xerial:sqlite-jdbc:3.36.0.3'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'
	implementation 'com.google.googlejavaformat:google-java-format:1.13.0'
}

test {
	useJUnitPlatform()
}
